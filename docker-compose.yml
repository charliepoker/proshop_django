# version: '3.8'

# networks:
#   proshop-network:
#     driver: bridge
  

# services:
#   backend:
#     build: .
#     ports:
#       - "8000:8000"
#     environment:
#       - DEBUG=1
#       - SECRET_KEY=your_secret_key
#       - DB_NAME=proshop
#       - DB_USER=dennisivy
#       - DB_PASSWORD=password
#       - DB_HOST=db
#       - DB_PORT=5432
#     depends_on:
#       - db
#     networks:
#       - proshop-network
  

#   frontend:
#     build: 
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     environment:
#       - REACT_APP_API_URL=http://localhost:8000
#     networks:
#       - proshop-network


#   db:
#     image: postgres:13
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=proshop
#       - POSTGRES_USER=dennisivy
#       - POSTGRES_PASSWORD=password
#     ports:
#       - "5430:5432"
#     networks:
#       - proshop-network


# volumes:
#   postgres_data:


version: '3.8'

networks:
  proshop-network:
    driver: bridge

services:
  backend:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - proshop-network


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:8000
    networks:
      - proshop-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - proshop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d proshop"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
